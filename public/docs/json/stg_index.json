{
  "swagger": "2.0",
  "info": {
    "description": "This is a api docs for `logistics`.  ",
    "version": "1.0.0",
    "title": "Log API Docs",
    "termsOfService": "http://myxxjs.com",
    "contact": {
      "email": "info@myxxjs.com"
    },
    "license": {
      "name": "Github.com",
      "url": "https://github.com/maguon/log_api/blob/master/LICENSE"
    }
  },
  "host": "stg.myxxjs.com:9001",
  "basePath": "/api",
  "tags": [
    {
      "name": "admin",
      "description": "Admin of log api"
    },
    {
      "name": "user",
      "description": "User of log api"
    },
    {
      "name":"truck",
      "description":"Truck of log api"
    },
    {
      "name":"drive",
      "description":"Drive of log api"
    },
    {
      "name":"company",
      "description":"Company of log api"
    },
    {
      "name":"city",
      "description":"City of log api"
    },
    {
      "name":"baseAddr",
      "description":"BaseAddr of log api"
    },
    {
      "name":"receive",
      "description":"Receive of log api"
    },
    {
      "name":"entrust",
      "description":"Entrust of log api"
    },
    {
      "name":"storage",
      "description":"Storage of log api"
    },
    {
      "name":"car",
      "description":"Car of log api"
    },
    {
      "name":"dispatch",
      "description":"Dispatch of log api"
    },
    {
      "name":"damage",
      "description":"Damage of log api"
    },
    {
      "name":"repairStation",
      "description":"repairStation of log api"
    },
    {
      "name":"msgPush",
      "description":"MsgPush of log api"
    },
    {
      "name":"app",
      "description":"app version"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/admin/{adminId}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "query admin user info",
        "description": "Get admin user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "path",
            "description": "admin Id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/admin"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid admin id"
          }
        }
      }
    },
    "/admin/do/login": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Admin user do login",
        "description": "",
        "operationId": "admin login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Admin base info ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query  user list",
        "description": "query user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "mobile",
            "in": "query",
            "description": "user mobile",
            "required": false,
            "type": "string"

          },
          {
            "name": "realName",
            "in": "query",
            "description": "real name",
            "required": false,
            "type": "string"

          },
          {
            "name": "type",
            "in": "query",
            "description": "user type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "user status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "create user",
        "description": "create user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/userLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "user login",
        "description": "user sign in",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/mobileUserLogin": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "mobileUser login",
        "description": "mobileUser sign in",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "deviceToken",
            "in": "query",
            "description": "device token",
            "required": true,
            "type": "string"

          },
          {
            "name": "version",
            "in": "query",
            "description": "device version",
            "required": true,
            "type": "string"

          },
          {
            "name": "appType",
            "in": "query",
            "description": "app Type",
            "required": true,
            "type": "integer"

          },
          {
            "name": "deviceType",
            "in": "query",
            "description": "device type",
            "required": true,
            "type": "integer"

          },
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/phone/{mobile}/passwordSms": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "send rest password sms",
        "description": "sendPswdSms",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "mobile",
            "in": "path",
            "description": "user unique mobile",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid phone value or invalid user status"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query user profile",
        "description": "query user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update user info",
        "description": "update user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "user",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/status/{status}": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update user status",
        "description": "update user status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "path",
            "description": "user status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update user password",
        "description": "update user password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "password",
            "in": "body",
            "description": "user base info:origin and new password is needed .",
            "required": true,
            "schema": {
              "$ref": "#/definitions/password"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/password"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/phone/{mobile}/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "reset user password",
        "description": "reset user password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mobile",
            "in": "path",
            "description": "user unique mobile",
            "required": true,
            "type": "string"

          },
          {
            "name": "reset",
            "in": "body",
            "description": "user info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backPassword"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/backPassword"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/avatarImage": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update avatar image",
        "description": "update avatar image",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "image",
            "in": "body",
            "description": "image url",
            "required": true,
            "schema": {
              "$ref": "#/definitions/avatarImage"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/user/{userId}/token/{token}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get user new token",
        "description": "change  user token",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "token",
            "in": "path",
            "description": "token",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/userDevice": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query userDevice list",
        "description": "query userDevice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userDeviceId",
            "in": "query",
            "description": "userDevice id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "deviceToken",
            "in": "query",
            "description": "device token",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/userDevice"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid userDevice id"
          }
        }
      }
    },
    "/user/{userId}/userDevice": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "create userDevice",
        "description": "create userDevice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "userDevice",
            "in": "body",
            "description": "userDevice info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid userDevice id"
          }
        }
      }
    },
    "/user/{userId}/deviceToken/{deviceToken}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes a userDevice",
        "description": "",
        "operationId": "deleteUserDevice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "deviceToken",
            "in": "path",
            "description": "device token",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/userDrive": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "query  userDrive list",
        "description": "query userDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "user id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "mobile",
            "in": "query",
            "description": "user mobile",
            "required": false,
            "type": "string"

          },
          {
            "name": "type",
            "in": "query",
            "description": "user type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "user status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/user"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/truckFirst": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truck list",
        "description": "query truck",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "companyId",
            "in": "query",
            "description": "company id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairStatus",
            "in": "query",
            "description": "repair status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckStatus",
            "in": "query",
            "description": "truck status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "drivingDateStart",
            "in": "query",
            "description": "drivingDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "drivingDateEnd",
            "in": "query",
            "description": "drivingDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseDateStart",
            "in": "query",
            "description": "licenseDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseDateEnd",
            "in": "query",
            "description": "licenseDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/truckTrailer": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truck list",
        "description": "query truck",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "brandId",
            "in": "query",
            "description": "brand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "query",
            "description": "company id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairStatus",
            "in": "query",
            "description": "repair status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckStatus",
            "in": "query",
            "description": "truck status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "numberStart",
            "in": "query",
            "description": "number start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "numberEnd",
            "in": "query",
            "description": "number end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "drivingDateStart",
            "in": "query",
            "description": "drivingDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "drivingDateEnd",
            "in": "query",
            "description": "drivingDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseDateStart",
            "in": "query",
            "description": "licenseDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseDateEnd",
            "in": "query",
            "description": "licenseDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/truckBase": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query truck base",
        "description": "query truck base",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairStatus",
            "in": "query",
            "description": "repair status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckStatus",
            "in": "query",
            "description": "truck status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/operateTypeCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query operateType count",
        "description": "query operateType count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/truckCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query truck count",
        "description": "query truck count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": true,
            "type": "integer"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/drivingCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query driving count",
        "description": "query driving count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckStatus",
            "in": "query",
            "description": "truck status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "drivingDateStart",
            "in": "query",
            "description": "drivingDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "drivingDateEnd",
            "in": "query",
            "description": "drivingDate end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/company/{companyId}/firstCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query first count",
        "description": "query first count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/company/{companyId}/trailerCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query trailer count",
        "description": "query trailer count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/truckTypeCountTotal": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckTypeCountTotal list",
        "description": "query truckTypeCountTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/truckOperateTypeCountTotal": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query truckOperateTypeCountTotal count",
        "description": "query truckOperateTypeCountTotal count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truckFirst": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckFirst",
        "description": "user create truckFirst",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truck",
            "in": "body",
            "description": "truck info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truckTrailer": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckTrailer",
        "description": "user create truckTrailer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truck",
            "in": "body",
            "description": "truck info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truck info",
        "description": "update truck info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truck",
            "in": "body",
            "description": "truck info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truck"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/image": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truck image",
        "description": "update truck image",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "image",
            "in": "body",
            "description": "image url",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckImage"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/trail/{trailId}/bind": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update Truck rel",
        "description": "update Truck rel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "trailId",
            "in": "path",
            "description": "trail id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/trail/{trailId}/unbind": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update Truck rel",
        "description": "update Truck rel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "trailId",
            "in": "path",
            "description": "trail id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/drive/{driveId}/bind": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update TruckDrive rel",
        "description": "update TruckDrive rel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "path",
            "description": "drive id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/drive/{driveId}/unbind": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update TruckDrive rel",
        "description": "update TruckDrive rel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "path",
            "description": "drive id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/viceDrive/{viceDriveId}/bind": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update TruckViceDrive rel",
        "description": "update TruckViceDrive rel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "viceDriveId",
            "in": "path",
            "description": "viceDrive id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/viceDrive/{viceDriveId}/unbind": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update TruckViceDrive rel",
        "description": "update TruckViceDrive rel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "viceDriveId",
            "in": "path",
            "description": "viceDrive id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/truckStatus/{truckStatus}/first": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "user update truck status",
        "description": "user update truck status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckStatus",
            "in": "path",
            "description": "truck status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/truckStatus/{truckStatus}/trailer": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "user update truck status",
        "description": "user update truck status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckStatus",
            "in": "path",
            "description": "truck status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/repairStatus/{repairStatus}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "user update repair status",
        "description": "user update repair status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repairStatus",
            "in": "path",
            "description": "repair status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truck id"
          }
        }
      }
    },
    "/truckInsureRel": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckInsureRel list",
        "description": "query truckInsureRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relId",
            "in": "query",
            "description": "rel id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckInsureRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckInsureRel id"
          }
        }
      }
    },
    "/truckInsureTypeTotal": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckInsureTypeTotal",
        "description": "query truckInsureTypeTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "total year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureId",
            "in": "query",
            "description": "insure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "string"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckInsureRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckInsureRel id"
          }
        }
      }
    },
    "/truckInsureMoneyTotal": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckInsureMoneyTotal",
        "description": "query truckInsureMoneyTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "total year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureId",
            "in": "query",
            "description": "insure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "string"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckInsureRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckInsureRel id"
          }
        }
      }
    },
    "/truckInsureCountTotal": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckInsureCountTotal",
        "description": "query truckInsureCountTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "total year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureId",
            "in": "query",
            "description": "insure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "string"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckInsureRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckInsureRel id"
          }
        }
      }
    },
    "/user/{userId}/truckInsureRel": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckInsureRel",
        "description": "user create truckInsureRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckInsureRel",
            "in": "body",
            "description": "truckInsureRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckInsureRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckInsureRel id"
          }
        }
      }
    },
    "/user/{userId}/truckInsureRel/{relId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truckInsureRel info",
        "description": "update truckInsureRel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relId",
            "in": "path",
            "description": "rel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckInsureRel",
            "in": "body",
            "description": "truckInsureRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckInsureRel"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckInsureRel id"
          }
        }
      }
    },
    "/truckInsure": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckInsure list",
        "description": "query truckInsure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "insure",
            "in": "query",
            "description": "insure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureName",
            "in": "query",
            "description": "insure name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckInsure"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid insure id"
          }
        }
      }
    },
    "/user/{userId}/truckInsure": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckInsure",
        "description": "user create truckInsure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckInsure",
            "in": "body",
            "description": "truckInsure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckInsure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid insure id"
          }
        }
      }
    },
    "/user/{userId}/truckInsure/{insureId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truckInsure info",
        "description": "update truckInsure info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "insureId",
            "in": "path",
            "description": "insure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckInsure",
            "in": "body",
            "description": "truckInsure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckInsure"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid insure id"
          }
        }
      }
    },
    "/truckRepairRel": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckRepairRel list",
        "description": "query truckRepairRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relId",
            "in": "query",
            "description": "rel id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairStatus",
            "in": "query",
            "description": "repair status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairType",
            "in": "query",
            "description": "repair type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairDateStart",
            "in": "query",
            "description": "repairDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "repairDateEnd",
            "in": "query",
            "description": "repairDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "endDateStart",
            "in": "query",
            "description": "endDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endDateEnd",
            "in": "query",
            "description": "endDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepairRel id"
          }
        }
      }
    },
    "/truckRepairRelCount": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckRepairRel count",
        "description": "query truckRepairRelCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repairStatus",
            "in": "query",
            "description": "repair status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepairRel id"
          }
        }
      }
    },
    "/truckRepairCountTotal": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckRepairCountTotal",
        "description": "query truckRepairCountTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "string"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepairRel id"
          }
        }
      }
    },
    "/truckRepairMoneyTotal": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckRepairMoneyTotal",
        "description": "query truckRepairMoneyTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "string"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepairRel id"
          }
        }
      }
    },
    "/truckRepair.csv": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckRepair.csv list",
        "description": "query truckRepair.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairStatus",
            "in": "query",
            "description": "repair status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairDateStart",
            "in": "query",
            "description": "repairDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "repairDateEnd",
            "in": "query",
            "description": "repairDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "endDateStart",
            "in": "query",
            "description": "endDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "endDateEnd",
            "in": "query",
            "description": "endDate end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckRepair.csv"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepair id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/truckRepairRel": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckRepairRel",
        "description": "user create truckRepairRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckRepairRel",
            "in": "body",
            "description": "truckRepairRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckRepairRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepairRel id"
          }
        }
      }
    },
    "/user/{userId}/truckRepairRel/{relId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truckRepairRel info",
        "description": "update truckRepairRel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relId",
            "in": "path",
            "description": "rel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckRepairRel",
            "in": "body",
            "description": "truckRepairRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckRepairRel"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepairRel id"
          }
        }
      }
    },
    "/user/{userId}/truckRepairRelBase/{relId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truckRepairRel info",
        "description": "update truckRepairRel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relId",
            "in": "path",
            "description": "rel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckRepairRel",
            "in": "body",
            "description": "truckRepairRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckRepairRel"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckRepairRel id"
          }
        }
      }
    },
    "/truckDispatch": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckDispatch",
        "description": "query truckDispatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dispatchFlag",
            "in": "query",
            "description": "dispatch flag",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "integer"

          },
          {
            "name": "currentCity",
            "in": "query",
            "description": "current city",
            "required": false,
            "type": "integer"

          },
          {
            "name": "taskStart",
            "in": "query",
            "description": "task start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "cityTaskStart",
            "in": "query",
            "description": "cityTask start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "taskEnd",
            "in": "query",
            "description": "task end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckDispatch id"
          }
        }
      }
    },
    "/user/{userId}/truck/{truckId}/dispatch": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update  truckDispatch",
        "description": "update truckDispatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "operator user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "path",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckDispatch",
            "in": "body",
            "description": "truck dispatch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckDispatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckDispatch id"
          }
        }
      }
    },
    "/truckAccident": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckAccident list",
        "description": "query truckAccident",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truckAccidentId",
            "in": "query",
            "description": "truckAccident id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "accidentDateStart",
            "in": "query",
            "description": "accidentDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "accidentDateEnd",
            "in": "query",
            "description": "accidentDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "dpRouteTaskId",
            "in": "query",
            "description": "dpRouteTask id ",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckAccidentType",
            "in": "query",
            "description": "truckAccident type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "underUserId",
            "in": "query",
            "description": "underUser id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "underUserName",
            "in": "query",
            "description": "underUser name",
            "required": false,
            "type": "string"

          },
          {
            "name": "accidentStatus",
            "in": "query",
            "description": "accident status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckAccident"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccident id"
          }
        }
      }
    },
    "/user/{userId}/truckAccident": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckAccident",
        "description": "user create truckAccident",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckAccident",
            "in": "body",
            "description": "truckAccident info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckAccident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccident id"
          }
        }
      }
    },
    "/user/{userId}/truckAccident/{truckAccidentId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update  truckAccident",
        "description": "update truckAccident",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "operator user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckAccidentId",
            "in": "path",
            "description": "truckAccident id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckAccident",
            "in": "body",
            "description": "truckAccident info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckAccident"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccident id"
          }
        }
      }
    },
    "/truckAccidentInsure": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  truckAccidentInsure list",
        "description": "query truckAccidentInsure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accidentInsureId",
            "in": "query",
            "description": "accidentInsure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureType",
            "in": "query",
            "description": "insure type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureId",
            "in": "query",
            "description": "insure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "financialLoanStatus",
            "in": "query",
            "description": "financialLoan status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insurePlanStart",
            "in": "query",
            "description": "insurePlan start ",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insurePlanEnd",
            "in": "query",
            "description": "insurePlan end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureStatus",
            "in": "query",
            "description": "insure status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "completedDateStart",
            "in": "query",
            "description": "completedDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "completedDateEnd",
            "in": "query",
            "description": "completedDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truckAccidentInsure"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccidentInsure id"
          }
        }
      }
    },
    "/user/{userId}/truckAccidentInsure": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckAccidentInsure",
        "description": "user create truckAccidentInsure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckAccidentInsure",
            "in": "body",
            "description": "truckAccidentInsure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckAccidentInsure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccidentInsure id"
          }
        }
      }
    },
    "/user/{userId}/truckAccidentInsure/{accidentInsureId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update  truckAccidentInsure",
        "description": "update truckAccidentInsure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "operator user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "accidentInsureId",
            "in": "path",
            "description": "accidentInsure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckAccidentInsure",
            "in": "body",
            "description": "truckAccidentInsure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckAccidentInsure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/truck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccidentInsure id"
          }
        }
      }
    },
    "/user/{userId}/truckAccidentInsure/{accidentInsureId}/insureStatus/{insureStatus}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update truckAccidentInsure status",
        "description": "update truckAccidentInsure status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "accidentInsureId",
            "in": "path",
            "description": "accidentInsure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "insureStatus",
            "in": "path",
            "description": "insure status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccidentInsure id"
          }
        }
      }
    },
    "/user/{userId}/truckAccidentInsureRel": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create truckAccidentInsureRel",
        "description": "user create truckAccidentInsureRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckAccidentInsureRel",
            "in": "body",
            "description": "truckAccidentInsureRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/truckAccidentInsureRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid truckAccidentInsureRel id"
          }
        }
      }
    },
    "/user/{userId}/accidentInsure/{accidentInsureId}/accident/{accidentId}": {
      "delete": {
        "tags": [
          "truck"
        ],
        "summary": "Deletes a truckAccidentInsureRel",
        "description": "",
        "operationId": "deleteTruckAccidentInsureRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "accidentInsureId",
            "in": "path",
            "description": "accidentInsure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "accidentId",
            "in": "path",
            "description": "accident id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/brand": {
      "get": {
        "tags": [
          "truck"
        ],
        "summary": "query  brand list",
        "description": "query brand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "brandId",
            "in": "query",
            "description": "brand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "brandName",
            "in": "query",
            "description": "brand name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/brand"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid brand id"
          }
        }
      }
    },
    "/user/{userId}/brand": {
      "post": {
        "tags": [
          "truck"
        ],
        "summary": "user create brand",
        "description": "user create brand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "brand",
            "in": "body",
            "description": "brand info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/brand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid brand id"
          }
        }
      }
    },
    "/user/{userId}/brand/{brandId}": {
      "put": {
        "tags": [
          "truck"
        ],
        "summary": "update brand info",
        "description": "update brand info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "brandId",
            "in": "path",
            "description": "brand id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "brand",
            "in": "body",
            "description": "brand info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/brand"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid brand id"
          }
        }
      }
    },
    "/drive": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  drive list",
        "description": "query drive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "gender",
            "in": "query",
            "description": "gender",
            "required": false,
            "type": "string"

          },
          {
            "name": "companyId",
            "in": "query",
            "description": "company id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveStatus",
            "in": "query",
            "description": "drive status",
            "required": false,
            "type": "string"

          },
          {
            "name": "tel",
            "in": "query",
            "description": "drive tel",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseType",
            "in": "query",
            "description": "license type",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseDateStart",
            "in": "query",
            "description": "licenseDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseDateEnd",
            "in": "query",
            "description": "licenseDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/drive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/licenseCount": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query license count",
        "description": "query license count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "licenseDateStart",
            "in": "query",
            "description": "licenseDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "licenseDateEnd",
            "in": "query",
            "description": "licenseDate end",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/drive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/company/{companyId}/driveCount": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query drive count",
        "description": "query drive count",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/drive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/driveOperateTypeCount": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query driveOperateType count",
        "description": "query driveOperateTypeCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "driveStatus",
            "in": "query",
            "description": "drive status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/drive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/user/{userId}/drive": {
      "post": {
        "tags": [
          "drive"
        ],
        "summary": "user create drive",
        "description": "user create drive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "drive",
            "in": "body",
            "description": "drive info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/drive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/user/{userId}/drive/{driveId}": {
      "put": {
        "tags": [
          "drive"
        ],
        "summary": "update drive info",
        "description": "update drive info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "path",
            "description": "drive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "drive",
            "in": "body",
            "description": "drive info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/drive"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/user/{userId}/drive/{driveId}/image": {
      "put": {
        "tags": [
          "drive"
        ],
        "summary": "update drive image",
        "description": "update drive image",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "path",
            "description": "drive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "image",
            "in": "body",
            "description": "image url",
            "required": true,
            "schema": {
              "$ref": "#/definitions/driveImage"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/user/{userId}/drive/{driveId}/driveStatus/{driveStatus}": {
      "put": {
        "tags": [
          "drive"
        ],
        "summary": "user update drive status",
        "description": "user update drive status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "path",
            "description": "drive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveStatus",
            "in": "path",
            "description": "drive status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid drive id"
          }
        }
      }
    },
    "/driveRefuel": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  driveRefuel list",
        "description": "query driveRefuel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "driveRefuelId",
            "in": "query",
            "description": "driveRefuel id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dpRouteTaskId",
            "in": "query",
            "description": "route task id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "refuelAddressType",
            "in": "query",
            "description": "refuelAddress type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "refuelDateStart",
            "in": "query",
            "description": "refuelDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "refuelDateEnd",
            "in": "query",
            "description": "refuelDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "checkStatus",
            "in": "query",
            "description": "check status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/driveRefuel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/refuelVolumeMoneyTotal": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  refuelVolumeMoney Total",
        "description": "query refuelVolumeMoneyTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "driveRefuelId",
            "in": "query",
            "description": "driveRefuel id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "refuelAddressType",
            "in": "query",
            "description": "refuelAddress type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "refuelDateStart",
            "in": "query",
            "description": "refuelDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "refuelDateEnd",
            "in": "query",
            "description": "refuelDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "checkStatus",
            "in": "query",
            "description": "check status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/driveRefuel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/refuelMonthStat": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  refuel month stat",
        "description": "query refuel month stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month stat start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month stat end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "split page start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/driveRefuel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/refuelWeekStat": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  refuel week stat",
        "description": "query refuel week stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "weekStart",
            "in": "query",
            "description": "week stat start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "weekEnd",
            "in": "query",
            "description": "week stat end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "split page start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/driveRefuel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/distanceMonthStat": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  distance month stat",
        "description": "query distance month stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month stat start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month stat end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "split page start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/driveRefuel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/distanceWeekStat": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  distance week stat",
        "description": "query distance week stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "weekStart",
            "in": "query",
            "description": "week stat start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "weekEnd",
            "in": "query",
            "description": "week stat end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "split page start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/driveRefuel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/distanceDayStat": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "query  distance daily stat",
        "description": "query distance daily stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dayStart",
            "in": "query",
            "description": "day stat start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dayEnd",
            "in": "query",
            "description": "day stat end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "split page start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "page size",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/driveRefuel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/user/{userId}/driveRefuel": {
      "post": {
        "tags": [
          "drive"
        ],
        "summary": "user create driveRefuel",
        "description": "user create driveRefuel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveRefuel",
            "in": "body",
            "description": "driveRefuel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/driveRefuel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/user/{userId}/driveRefuel/{driveRefuelId}/checkStatus/{checkStatus}": {
      "put": {
        "tags": [
          "drive"
        ],
        "summary": "user update checkStatus",
        "description": "user update checkStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveRefuelId",
            "in": "path",
            "description": "driveRefuel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "checkStatus",
            "in": "path",
            "description": "check status",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveRefuel",
            "in": "body",
            "description": "driveRefuel info",
            "required": false,
            "schema": {
              "$ref": "#/definitions/checkReason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid driveRefuel id"
          }
        }
      }
    },
    "/company": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "query  company list",
        "description": "query company",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "company id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "companyName",
            "in": "query",
            "description": "company name",
            "required": false,
            "type": "string"

          },
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "contacts",
            "in": "query",
            "description": "contacts type",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/company"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/companyOperateTypeTotal": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "query  companyOperateTypeTotal",
        "description": "query companyOperateTypeTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operateType",
            "in": "query",
            "description": "operate type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/company"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/companyTruckCountTotal": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "query  companyTruckCountTotal",
        "description": "query companyTruckCountTotal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "company id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckType",
            "in": "query",
            "description": "truck type",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/company"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/user/{userId}/company": {
      "post": {
        "tags": [
          "company"
        ],
        "summary": "user create company",
        "description": "user create company",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "company",
            "in": "body",
            "description": "company info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/user/{userId}/company/{companyId}": {
      "put": {
        "tags": [
          "company"
        ],
        "summary": "update company info",
        "description": "update company info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "companyId",
            "in": "path",
            "description": "company id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "company",
            "in": "body",
            "description": "company info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/company"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid company id"
          }
        }
      }
    },
    "/city": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "query  city list",
        "description": "query city",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cityId",
            "in": "query",
            "description": "city id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "cityName",
            "in": "query",
            "description": "city name",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/city"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid city id"
          }
        }
      }
    },
    "/user/{userId}/city": {
      "post": {
        "tags": [
          "city"
        ],
        "summary": "user create city",
        "description": "user create city",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "city",
            "in": "body",
            "description": "city info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/city"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid city id"
          }
        }
      }
    },
    "/user/{userId}/city/{cityId}": {
      "put": {
        "tags": [
          "city"
        ],
        "summary": "update city info",
        "description": "update city info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "cityId",
            "in": "path",
            "description": "city id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "city",
            "in": "body",
            "description": "city info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/city"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid city id"
          }
        }
      }
    },
    "/user/{userId}/city/{cityId}/cityStatus/{cityStatus}": {
      "put": {
        "tags": [
          "city"
        ],
        "summary": "update city status",
        "description": "update city status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "cityId",
            "in": "path",
            "description": "city id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "cityStatus",
            "in": "path",
            "description": "city status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid city id"
          }
        }
      }
    },
    "/cityRoute": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "query  cityRoute list",
        "description": "query cityRoute",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/cityRoute"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid cityRoute id"
          }
        }
      }
    },
    "/cityRouteBase": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "query  cityRouteBase list",
        "description": "query cityRouteBase",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/cityRoute"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid cityRoute id"
          }
        }
      }
    },
    "/cityRouteDispatch": {
      "get": {
        "tags": [
          "city"
        ],
        "summary": "query  cityRouteDispatch list",
        "description": "query cityRouteDispatch",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/cityRoute"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid cityRoute id"
          }
        }
      }
    },
    "/user/{userId}/cityRoute": {
      "post": {
        "tags": [
          "city"
        ],
        "summary": "user create cityRoute",
        "description": "user create cityRoute",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "cityRoute",
            "in": "body",
            "description": "cityRoute info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cityRoute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid cityRoute id"
          }
        }
      }
    },
    "/user/{userId}/cityRoute/{routeId}": {
      "put": {
        "tags": [
          "city"
        ],
        "summary": "update cityRoute info",
        "description": "update cityRoute info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "routeId",
            "in": "path",
            "description": "route id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "cityRoute",
            "in": "body",
            "description": "cityRoute info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cityRoute"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid cityRoute id"
          }
        }
      }
    },
    "/baseAddr": {
      "get": {
        "tags": [
          "baseAddr"
        ],
        "summary": "query baseAddr list",
        "description": "query baseAddr",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "addrName",
            "in": "query",
            "description": "addr name",
            "required": false,
            "type": "string"

          },
          {
            "name": "address",
            "in": "query",
            "description": "receive address",
            "required": false,
            "type": "string"

          },
          {
            "name": "cityId",
            "in": "query",
            "description": "city id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/baseAddr"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid baseAddr id"
          }
        }
      }
    },
    "/user/{userId}/baseAddr": {
      "post": {
        "tags": [
          "baseAddr"
        ],
        "summary": "user create baseAddr",
        "description": "user create baseAddr",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "baseAddr",
            "in": "body",
            "description": "baseAddr info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/baseAddr"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid baseAddr id"
          }
        }
      }
    },
    "/user/{userId}/baseAddr/{baseAddrId}": {
      "put": {
        "tags": [
          "baseAddr"
        ],
        "summary": "update baseAddr info",
        "description": "update baseAddr info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "path",
            "description": "baseAddr id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "baseAddr",
            "in": "body",
            "description": "baseAddr info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/baseAddr"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid baseAddr id"
          }
        }
      }
    },
    "/receive": {
      "get": {
        "tags": [
          "receive"
        ],
        "summary": "query receive list",
        "description": "query receive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shortName",
            "in": "query",
            "description": "short name",
            "required": false,
            "type": "string"

          },
          {
            "name": "receiveName",
            "in": "query",
            "description": "receive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "address",
            "in": "query",
            "description": "receive address",
            "required": false,
            "type": "string"

          },
          {
            "name": "cityId",
            "in": "query",
            "description": "city id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid receive id"
          }
        }
      }
    },
    "/user/{userId}/receive": {
      "post": {
        "tags": [
          "receive"
        ],
        "summary": "user create receive",
        "description": "user create receive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "receive",
            "in": "body",
            "description": "receive info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/receive"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid receive id"
          }
        }
      }
    },
    "/user/{userId}/receive/{receiveId}": {
      "put": {
        "tags": [
          "receive"
        ],
        "summary": "update receive info",
        "description": "update receive info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "path",
            "description": "receive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "receive",
            "in": "body",
            "description": "receive info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/receive"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid receive id"
          }
        }
      }
    },
    "/user/{userId}/receive/{receiveId}/cleanFee": {
      "put": {
        "tags": [
          "receive"
        ],
        "summary": "update receive clean fee",
        "description": "update receive clean fee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "path",
            "description": "receive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "receive",
            "in": "body",
            "description": "receive clean fee property",
            "required": true,
            "schema": {
              "$ref": "#/definitions/receive"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid receive id"
          }
        }
      }
    },
    "/receive/{receiveId}/contacts": {
      "get": {
        "tags": [
          "receive"
        ],
        "summary": "query  contacts list",
        "description": "query contacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "receiveId",
            "in": "path",
            "description": "receive id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/receive"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid receive id"
          }
        }
      }
    },
    "/user/{userId}/receive/{receiveId}/contacts": {
      "post": {
        "tags": [
          "receive"
        ],
        "summary": "user create contacts",
        "description": "user create contacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "path",
            "description": "receive id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "contacts",
            "in": "body",
            "description": "contacts info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid contacts id"
          }
        }
      }
    },
    "/user/{userId}/receiveContacts/{receiveContactsId}": {
      "put": {
        "tags": [
          "receive"
        ],
        "summary": "update contacts info",
        "description": "update contacts info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "receiveContactsId",
            "in": "path",
            "description": "receiveContacts id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "contacts",
            "in": "body",
            "description": "contacts info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contacts"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid contacts id"
          }
        }
      },
      "delete": {
        "tags": [
          "receive"
        ],
        "summary": "Deletes a contacts",
        "description": "",
        "operationId": "deleteContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "receiveContactsId",
            "in": "path",
            "description": "receiveContacts id to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/entrust": {
      "get": {
        "tags": [
          "entrust"
        ],
        "summary": "query entrust list",
        "description": "query entrust",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "shortName",
            "in": "query",
            "description": "short name",
            "required": false,
            "type": "string"

          },
          {
            "name": "entrustName",
            "in": "query",
            "description": "entrust name",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/entrust"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/user/{userId}/entrust": {
      "post": {
        "tags": [
          "entrust"
        ],
        "summary": "user create entrust",
        "description": "user create entrust",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrust",
            "in": "body",
            "description": "entrust info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entrust"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/user/{userId}/entrust/{entrustId}": {
      "put": {
        "tags": [
          "entrust"
        ],
        "summary": "update entrust info",
        "description": "update entrust info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "path",
            "description": "entrust id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrust",
            "in": "body",
            "description": "entrust info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entrust"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/entrust/{entrustId}/contacts": {
      "get": {
        "tags": [
          "entrust"
        ],
        "summary": "query  contacts list",
        "description": "query contacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrustId",
            "in": "path",
            "description": "entrust id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/entrust"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid entrust id"
          }
        }
      }
    },
    "/user/{userId}/entrust/{entrustId}/contacts": {
      "post": {
        "tags": [
          "entrust"
        ],
        "summary": "user create contacts",
        "description": "user create contacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "path",
            "description": "entrust id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "contacts",
            "in": "body",
            "description": "contacts info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contacts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid contacts id"
          }
        }
      }
    },
    "/user/{userId}/entrustContacts/{entrustContactsId}": {
      "put": {
        "tags": [
          "entrust"
        ],
        "summary": "update contacts info",
        "description": "update contacts info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "entrustContactsId",
            "in": "path",
            "description": "entrustContacts id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "contacts",
            "in": "body",
            "description": "contacts info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contacts"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid contacts id"
          }
        }
      },
      "delete": {
        "tags": [
          "entrust"
        ],
        "summary": "Deletes a contacts",
        "description": "",
        "operationId": "deleteContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "entrustContactsId",
            "in": "path",
            "description": "entrustContacts id to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/storage": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storage list",
        "description": "query storage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageName",
            "in": "query",
            "description": "storage name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageDate": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageDate list",
        "description": "query storageDate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageName",
            "in": "query",
            "description": "storage name",
            "required": false,
            "type": "string"

          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "date start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "date end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateStartMonth",
            "in": "query",
            "description": "date startMonth",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateEndMonth",
            "in": "query",
            "description": "date endMonth",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageDate"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageCount": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageCount",
        "description": "query storageCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateStart",
            "in": "query",
            "description": "date start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateEnd",
            "in": "query",
            "description": "date end",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageCount"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageTotalMonth": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageTotalMonth list",
        "description": "query storageTotalMonth",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "total year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageTotalMonth"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageTotalDay": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageTotalDay list",
        "description": "query storageTotalDay",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "total year",
            "required": false,
            "type": "integer"

          },
          {
            "name": "month",
            "in": "query",
            "description": "total month",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageTotalDay"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageCar.csv": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageCar.csv list",
        "description": "query storageCar.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderStart",
            "in": "query",
            "description": "order start",
            "required": false,
            "type": "string"

          },
          {
            "name": "orderEnd",
            "in": "query",
            "description": "order end",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageCar.csv"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/storage": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "create storage",
        "description": "create storage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storage",
            "in": "body",
            "description": "storage info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/user/{userId}/storage/{storageId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storage info",
        "description": "update storage info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storage",
            "in": "body",
            "description": "storage info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storage"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/user/{userId}/storage/{storageId}/storageStatus/{storageStatus}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storage status",
        "description": "update storage status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageStatus",
            "in": "path",
            "description": "storage status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storageArea": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageArea list",
        "description": "query storageArea",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaName",
            "in": "query",
            "description": "area name",
            "required": false,
            "type": "string"

          },
          {
            "name": "areaStatus",
            "in": "query",
            "description": "area status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageArea"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/user/{userId}/storage/{storageId}/storageArea": {
      "post": {
        "tags": [
          "storage"
        ],
        "summary": "create storageArea",
        "description": "create storageArea",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "path",
            "description": "storage Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageArea",
            "in": "body",
            "description": "storageArea info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/user/{userId}/storageArea/{areaId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageArea info",
        "description": "update storageArea info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "path",
            "description": "area id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "storageArea",
            "in": "body",
            "description": "storageArea info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageArea"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/user/{userId}/storageArea/{areaId}/areaStatus/{areaStatus}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageArea status",
        "description": "update storageArea status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "path",
            "description": "area id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "areaStatus",
            "in": "path",
            "description": "area status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storageArea id"
          }
        }
      }
    },
    "/storageParking": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParking list",
        "description": "query storageParking",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "areaId",
            "in": "query",
            "description": "area id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/storage/{storageId}/makeStat": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "query  storageParking make list",
        "description": "query storageParking make",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storageId",
            "in": "path",
            "description": "storage id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/storageParking"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid storage id"
          }
        }
      }
    },
    "/user/{userId}/storageParking/{parkingId}": {
      "put": {
        "tags": [
          "storage"
        ],
        "summary": "update storageParking info",
        "description": "update storageParking info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "parkingId",
            "in": "path",
            "description": "parking id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parking id"
          }
        }
      }
    },
    "/carList": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car list",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "addrId",
            "in": "query",
            "description": "addr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "orderStart",
            "in": "query",
            "description": "order start",
            "required": false,
            "type": "string"

          },
          {
            "name": "orderEnd",
            "in": "query",
            "description": "order end",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdStart",
            "in": "query",
            "description": "created start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdEnd",
            "in": "query",
            "description": "created end",
            "required": false,
            "type": "string"

          },
          {
            "name": "carStatus",
            "in": "query",
            "description": "car status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "uploadId",
            "in": "query",
            "description": "upload id",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/car": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car list",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "vinCode",
            "in": "query",
            "description": "vin code",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "query",
            "description": "model id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "addrId",
            "in": "query",
            "description": "addr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "orderStart",
            "in": "query",
            "description": "order start",
            "required": false,
            "type": "string"

          },
          {
            "name": "orderEnd",
            "in": "query",
            "description": "order end",
            "required": false,
            "type": "string"

          },
          {
            "name": "carStatus",
            "in": "query",
            "description": "car status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "enterStart",
            "in": "query",
            "description": "enter start",
            "required": false,
            "type": "string"

          },
          {
            "name": "enterEnd",
            "in": "query",
            "description": "enter end",
            "required": false,
            "type": "string"

          },
          {
            "name": "planStart",
            "in": "query",
            "description": "plan start",
            "required": false,
            "type": "string"

          },
          {
            "name": "planEnd",
            "in": "query",
            "description": "plan end",
            "required": false,
            "type": "string"

          },
          {
            "name": "realStart",
            "in": "query",
            "description": "real start",
            "required": false,
            "type": "string"

          },
          {
            "name": "realEnd",
            "in": "query",
            "description": "real end",
            "required": false,
            "type": "string"

          },
          {
            "name": "relStatus",
            "in": "query",
            "description": "rel status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "active",
            "in": "query",
            "description": "rel active",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carRouteEndCount": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car routeEndCount",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderDate",
            "in": "query",
            "description": "car orderDate",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carOrderDateCount": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car orderDateCount",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderDate",
            "in": "query",
            "description": "car orderDate",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carReceiveCount": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car ReceiveCount",
        "description": "query car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "orderDate",
            "in": "query",
            "description": "car orderDate",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carMonthStat": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car monthStat",
        "description": "query carMonthStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust Id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make Id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr Id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/carDayStat": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  car DayStat",
        "description": "query carDayStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entrustId",
            "in": "query",
            "description": "entrust Id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make Id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr Id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/car"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/uploadCar": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create car",
        "description": "user create car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "uploadId",
            "in": "query",
            "description": "upload id",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/car": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create car",
        "description": "user create car",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "car",
            "in": "body",
            "description": "car info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/car"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/car/{carId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update car info",
        "description": "update car info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "car",
            "in": "body",
            "description": "car info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/car"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/car/{carId}/vin": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update car vin",
        "description": "update car vin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "body",
            "description": "car vin",
            "required": true,
            "schema": {
              "$ref": "#/definitions/vin"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/car/{carId}/carStatus/{carStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update car status",
        "description": "update car status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carStatus",
            "in": "path",
            "description": "car status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/carStorageRel": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carStorageRel",
        "description": "user create carStorageRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carStorageRel",
            "in": "body",
            "description": "carStorageRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carStorageRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carStorageRel id"
          }
        }
      }
    },
    "/user/{userId}/car/{carId}/carStorageRel": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "user update carStorageRel",
        "description": "user update carStorageRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "path",
            "description": "car id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": true,
            "type": "string"

          },
          {
            "name": "carStorageRel",
            "in": "body",
            "description": "carStorageRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/againCarStorageRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid car id"
          }
        }
      }
    },
    "/user/{userId}/carStorageRel/{relId}/relStatus/{relStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carStorageRel status",
        "description": "update carStorageRel status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relId",
            "in": "path",
            "description": "rel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relStatus",
            "in": "path",
            "description": "rel status",
            "required": true,
            "type": "integer"

          },
          {
            "name": "parkingId",
            "in": "query",
            "description": "parking id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "storageId",
            "in": "query",
            "description": "storage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id",
            "required": false,
            "type": "integer"

          }

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carStorageRel id"
          }
        }
      }
    },
    "/user/{userId}/carStorageRel/{relId}/planOutTime": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update rel planOutTime",
        "description": "update rel planOutTime",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "relId",
            "in": "path",
            "description": "rel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "planOutTime",
            "in": "body",
            "description": "rel planOutTime",
            "required": true,
            "schema": {
              "$ref": "#/definitions/planOutTime"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid rel id"
          }
        }
      }
    },
    "/carMake": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carMake list",
        "description": "query carMake",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "makeName",
            "in": "query",
            "description": "make name",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carMake"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/user/{userId}/carMake": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carMake",
        "description": "user create carMake",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carMake",
            "in": "body",
            "description": "carMake info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carMake"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/user/{userId}/carMake/{makeId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carMake info",
        "description": "update carMake info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carMake",
            "in": "body",
            "description": "carMake info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carMake"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid make id"
          }
        }
      }
    },
    "/carMake/{makeId}/carModel": {
      "get": {
        "tags": [
          "car"
        ],
        "summary": "query  carModel list",
        "description": "query carModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/carModel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/user/{userId}/carMake/{makeId}/carModel": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carModel",
        "description": "user create carModel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "makeId",
            "in": "path",
            "description": "make id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carModel",
            "in": "body",
            "description": "carModel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/user/{userId}/carModel/{modelId}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carModel info",
        "description": "update carModel info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "path",
            "description": "model id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carModel",
            "in": "body",
            "description": "carModel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carModel"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/user/{userId}/carModel/{modelId}/modelStatus/{modelStatus}": {
      "put": {
        "tags": [
          "car"
        ],
        "summary": "update carModel status",
        "description": "update carModel status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelId",
            "in": "path",
            "description": "model id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "modelStatus",
            "in": "path",
            "description": "model status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid model id"
          }
        }
      }
    },
    "/user/{userId}/carExceptionRel": {
      "post": {
        "tags": [
          "car"
        ],
        "summary": "user create carExceptionRel",
        "description": "user create carExceptionRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carExceptionRel",
            "in": "body",
            "description": "carExceptionRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/carExceptionRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid carExceptionRel id"
          }
        }
      }
    },
    "/dpDemand": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpDemand list",
        "description": "query dpDemand",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "dpDemandId",
            "in": "query",
            "description": "dpDemand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateId start",
            "required": false,
            "type": "string"

          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateId end",
            "required": false,
            "type": "string"

          },
          {
            "name": "realName",
            "in": "query",
            "description": "real name",
            "required": false,
            "type": "string"

          },
          {
            "name": "preCountStart",
            "in": "query",
            "description": "preCount start",
            "required": false,
            "type": "string"

          },
          {
            "name": "preCountEnd",
            "in": "query",
            "description": "preCount end",
            "required": false,
            "type": "string"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "demandStatus",
            "in": "query",
            "description": "demand status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpDemand"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpDemand id"
          }
        }
      }
    },
    "/dpDemandBase": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpDemandBase list",
        "description": "query dpDemandBase",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "dpRouteTaskId",
            "in": "query",
            "description": "dpRouteTask id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dpDemandId",
            "in": "query",
            "description": "dpDemand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "demandStatus",
            "in": "query",
            "description": "demand status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpDemandBase"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpDemandBase id"
          }
        }
      }
    },
    "/user/{userId}/dpDemand": {
      "post": {
        "tags": [
          "dispatch"
        ],
        "summary": "user create dpDemand",
        "description": "user create dpDemand",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpDemand",
            "in": "body",
            "description": "dpDemand info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dpDemand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpDemand id"
          }
        }
      }
    },
    "/user/{userId}/dpDemand/{dpDemandId}/demandStatus/{demandStatus}": {
      "put": {
        "tags": [
          "dispatch"
        ],
        "summary": "update dpDemand status",
        "description": "update dpDemand status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpDemandId",
            "in": "path",
            "description": "dpDemand id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "demandStatus",
            "in": "path",
            "description": "demand status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpDemand id"
          }
        }
      }
    },
    "/dpTaskStat": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpTaskStat list",
        "description": "query dpTaskStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dpTaskStatId",
            "in": "query",
            "description": "dpTaskStat id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dpTaskStatStatus",
            "in": "query",
            "description": "dpTaskStat status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpTaskStat"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpTaskStat id"
          }
        }
      }
    },
    "/dpTaskStatBase": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpTaskStatBase list",
        "description": "query dpTaskStatBase",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dpTaskStatId",
            "in": "query",
            "description": "dpTaskStat id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateId",
            "in": "query",
            "description": "date id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpTaskStatBase"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpTaskStatBase id"
          }
        }
      }
    },
    "/dpTaskStatCount": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpTaskStat count",
        "description": "query dpTaskStatCount",
        "produces": [
          "application/json"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpTaskStatCount"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpTaskStat id"
          }
        }
      }
    },
    "/user/{userId}/dpTaskStat": {
      "post": {
        "tags": [
          "dispatch"
        ],
        "summary": "user create dpTaskStat",
        "description": "user create dpTaskStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpTaskStat",
            "in": "body",
            "description": "dpTaskStat info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dpTaskStat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpTaskStat id"
          }
        }
      }
    },
    "/user/{userId}/taskStatStatus": {
      "put": {
        "tags": [
          "dispatch"
        ],
        "summary": "update dpTaskStat status",
        "description": "update dpTaskStat status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dateId",
            "in": "query",
            "description": "date id",
            "required": true,
            "type": "string"

          },
          {
            "name": "taskStatStatus",
            "in": "query",
            "description": "taskStat status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpTaskStat id"
          }
        }
      }
    },
    "/dpRouteTask": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteTask list",
        "description": "query dpRouteTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dpRouteTaskId",
            "in": "query",
            "description": "dpRouteTask id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "taskPlanDateStart",
            "in": "query",
            "description": "taskPlanDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "taskPlanDateEnd",
            "in": "query",
            "description": "taskPlanDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "routeOpName",
            "in": "query",
            "description": "routeOp name",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateId start",
            "required": false,
            "type": "string"

          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateId end",
            "required": false,
            "type": "string"

          },
          {
            "name": "taskStatusArr",
            "in": "query",
            "description": "task statusArr",
            "required": false,
            "type": "string"

          },
          {
            "name": "taskStatus",
            "in": "query",
            "description": "task status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "loadTaskStatus",
            "in": "query",
            "description": "load task status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "loadDistance",
            "in": "query",
            "description": "load distance",
            "required": false,
            "type": "integer"

          },
          {
            "name": "noLoadDistance",
            "in": "query",
            "description": "noLoad distance",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteTask"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/driveDistanceCount": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query driveDistance count",
        "description": "query driveDistanceCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskStatus",
            "in": "query",
            "description": "task status",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loadDistance",
            "in": "query",
            "description": "load distance",
            "required": true,
            "type": "integer"

          },
          {
            "name": "noLoadDistance",
            "in": "query",
            "description": "noLoad distance",
            "required": true,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateId start",
            "required": true,
            "type": "string"

          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateId end",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteTask"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/notCompletedTaskStatusCount": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query notCompletedTaskStatus count",
        "description": "query notCompletedTaskStatusCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskStatusArr",
            "in": "query",
            "description": "task statusArr",
            "required": false,
            "type": "string"

          },
          {
            "name": "taskStatus",
            "in": "query",
            "description": "task status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteTask"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/taskStatusCount": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query taskStatusCount count",
        "description": "query taskStatusCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskStatusArr",
            "in": "query",
            "description": "task statusArr",
            "required": false,
            "type": "string"

          },
          {
            "name": "taskStatus",
            "in": "query",
            "description": "task status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "taskEndDateStart",
            "in": "query",
            "description": "taskEndDate start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "taskEndDateEnd",
            "in": "query",
            "description": "taskEndDate end",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteTask"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteTask": {
      "post": {
        "tags": [
          "dispatch"
        ],
        "summary": "user create dpRouteTask",
        "description": "user create dpRouteTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteTask",
            "in": "body",
            "description": "dpRouteTask info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dpRouteTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteTask/{dpRouteTaskId}/taskStatus/{taskStatus}": {
      "put": {
        "tags": [
          "dispatch"
        ],
        "summary": "update dpRouteTask status",
        "description": "update dpRouteTask status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteTaskId",
            "in": "path",
            "description": "dpRouteTask id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "taskStatus",
            "in": "path",
            "description": "task status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteTask/{dpRouteTaskId}": {
      "delete": {
        "tags": [
          "dispatch"
        ],
        "summary": "Deletes a dpRouteTask",
        "description": "",
        "operationId": "deleteDpRouteTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "dpRouteTaskId",
            "in": "path",
            "description": "dpRouteTask id to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/dpRouteLoadTask": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTask list",
        "description": "query dpRouteLoadTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dpRouteTaskId",
            "in": "query",
            "description": "dpRouteTask id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dpDemandId",
            "in": "query",
            "description": "dpDemand id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dpRouteLoadTaskId",
            "in": "query",
            "description": "dpRouteLoadTask id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "fieldOpId",
            "in": "query",
            "description": "field operator id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "loadDateStart",
            "in": "query",
            "description": "loadDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "loadDateEnd",
            "in": "query",
            "description": "loadDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "routeStartId",
            "in": "query",
            "description": "routeStart id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "baseAddrId",
            "in": "query",
            "description": "baseAddr id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "truckNum",
            "in": "query",
            "description": "truck num",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteLoadTask"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/dpRouteLoadTaskCount": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTask count",
        "description": "query dpRouteLoadTask",
        "produces": [
          "application/json"
        ],
        "parameters": [

          {
            "name": "fieldOpId",
            "in": "query",
            "description": "fieldOp id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "loadDateStart",
            "in": "query",
            "description": "loadDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "loadDateEnd",
            "in": "query",
            "description": "loadDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "loadTaskStatusArr",
            "in": "query",
            "description": "loadTaskStatus arr",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteLoadTask"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTask id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteTask/{dpRouteTaskId}/dpRouteLoadTask": {
      "post": {
        "tags": [
          "dispatch"
        ],
        "summary": "user create dpRouteLoadTask",
        "description": "user create dpRouteLoadTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteTaskId",
            "in": "path",
            "description": "dpRouteTask Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteLoadTask",
            "in": "body",
            "description": "dpRouteLoadTask info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dpRouteLoadTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTask id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteLoadTask/{dpRouteLoadTaskId}/loadTaskStatus/{loadTaskStatus}": {
      "put": {
        "tags": [
          "dispatch"
        ],
        "summary": "update dpRouteLoadTask status",
        "description": "update dpRouteLoadTask status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteLoadTaskId",
            "in": "path",
            "description": "dpRouteLoadTask id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loadTaskStatus",
            "in": "path",
            "description": "loadTask status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTask id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteLoadTask/{dpRouteLoadTaskId}": {
      "delete": {
        "tags": [
          "dispatch"
        ],
        "summary": "Deletes a dpRouteLoadTask",
        "description": "",
        "operationId": "deleteDpRouteLoadTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "dpRouteLoadTaskId",
            "in": "path",
            "description": "dpRouteLoadTask id to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/dpRouteLoadTask/{dpRouteLoadTaskId}/dpRouteLoadTaskDetail": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTaskDetail list",
        "description": "query dpRouteLoadTaskDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dpRouteLoadTaskId",
            "in": "path",
            "description": "dpRouteLoadTask id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "carLoadStatus",
            "in": "query",
            "description": "carLoadStatus",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteLoadTaskDetail"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTask id"
          }
        }
      }
    },
    "/carLoadStatusCount": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  carLoadStatus count",
        "description": "query carLoadStatusCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "carLoadStatus",
            "in": "query",
            "description": "carLoad status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "arriveDateStart",
            "in": "query",
            "description": "arriveDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "arriveDateEnd",
            "in": "query",
            "description": "arriveDate end",
            "required": false,
            "type": "string"

          },
          {
            "name": "dpRouteLoadTaskId",
            "in": "query",
            "description": "dpRouteLoadTask id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteLoadTaskDetail"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskDetail id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteLoadTask/{dpRouteLoadTaskId}/dpRouteLoadTaskDetail": {
      "post": {
        "tags": [
          "dispatch"
        ],
        "summary": "user create dpRouteLoadTaskDetail",
        "description": "user create dpRouteLoadTaskDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteTaskId",
            "in": "query",
            "description": "dpRouteTask id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteLoadTaskId",
            "in": "path",
            "description": "dpRouteLoadTask id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteLoadTaskDetail",
            "in": "body",
            "description": "dpRouteLoadTaskDetail info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/dpRouteLoadTaskDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskDetail id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteTaskDetail/{dpRouteTaskDetailId}/carLoadStatus/{carLoadStatus}": {
      "put": {
        "tags": [
          "dispatch"
        ],
        "summary": "update dpRouteTaskDetail status",
        "description": "update dpRouteTaskDetail status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteTaskDetailId",
            "in": "path",
            "description": "dpRouteTaskDetail id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "carLoadStatus",
            "in": "path",
            "description": "carLoad status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteTaskDetail id"
          }
        }
      }
    },
    "/user/{userId}/dpRouteTaskDetail/{dpRouteTaskDetailId}": {
      "delete": {
        "tags": [
          "dispatch"
        ],
        "summary": "Deletes a dpRouteTaskDetail",
        "description": "",
        "operationId": "deleteDpRouteTaskDetail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "truckId",
            "in": "query",
            "description": "truck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "dpRouteTaskDetailId",
            "in": "path",
            "description": "dpRouteTaskDetail id to delete",
            "required": true,
            "type": "integer"
          },
          {
            "name": "carId",
            "in": "query",
            "description": "car id to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/dpRouteLoadTaskCleanRel": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTaskCleanRel list",
        "description": "query dpRouteLoadTaskCleanRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "loadTaskCleanRelId",
            "in": "query",
            "description": "loadTaskCleanRel id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dpRouteTaskId",
            "in": "query",
            "description": "dpRouteTask id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveId",
            "in": "query",
            "description": "drive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "driveName",
            "in": "query",
            "description": "drive name",
            "required": false,
            "type": "string"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "cleanDateStart",
            "in": "query",
            "description": "cleanDate start",
            "required": false,
            "type": "string"

          },
          {
            "name": "cleanDateEnd",
            "in": "query",
            "description": "cleanDate end",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dpRouteLoadTaskCleanRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskCleanRel id"
          }
        }
      }
    },
    "/dpRouteLoadTaskCleanRelMonthStat": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTaskCleanRelMonthStat",
        "description": "query dpRouteLoadTaskCleanRelMonthStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yearMonth",
            "in": "query",
            "description": "yearMonth",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dispatch"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskCleanRel id"
          }
        }
      }
    },
    "/dpRouteLoadTaskCleanRelReceiveMonthStat": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTaskCleanRelReceiveMonthStat",
        "description": "query dpRouteLoadTaskCleanRelReceiveMonthStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dispatch"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskCleanRel id"
          }
        }
      }
    },
    "/dpRouteLoadTaskCleanRelWeekStat": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTaskCleanRelWeekStat",
        "description": "query dpRouteLoadTaskCleanRelWeekStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dispatch"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskCleanRel id"
          }
        }
      }
    },
    "/dpRouteLoadTaskCleanRelReceiveWeekStat": {
      "get": {
        "tags": [
          "dispatch"
        ],
        "summary": "query  dpRouteLoadTaskCleanRelReceiveWeekStat",
        "description": "query dpRouteLoadTaskCleanRelReceiveWeekStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yWeek",
            "in": "query",
            "description": "yWeek",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/dispatch"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskCleanRel id"
          }
        }
      }
    },
    "/user/{userId}/loadTaskCleanRel/{loadTaskCleanRelId}/status/{status}": {
      "put": {
        "tags": [
          "dispatch"
        ],
        "summary": "update dpRouteLoadTaskCleanRel status",
        "description": "update dpRouteLoadTaskCleanRel status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loadTaskCleanRelId",
            "in": "path",
            "description": "loadTaskCleanRel id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "status",
            "in": "path",
            "description": "status",
            "required": true,
            "type": "integer"

          },
          {
            "name": "loadTaskCleanRel",
            "in": "body",
            "description": "loadTaskCleanRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loadTaskCleanRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid dpRouteLoadTaskCleanRel id"
          }
        }
      }
    },
    "/damage": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damage list",
        "description": "query damage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageId",
            "in": "query",
            "description": "damage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageType",
            "in": "query",
            "description": "damage type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageLinkType",
            "in": "query",
            "description": "damage link type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "declareUserId",
            "in": "query",
            "description": "declareUser id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "declareUserName",
            "in": "query",
            "description": "declareUser name",
            "required": false,
            "type": "string"

          },
          {
            "name": "underUserId",
            "in": "query",
            "description": "underUser id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "underUserName",
            "in": "query",
            "description": "underUser name",
            "required": false,
            "type": "string"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageStatus",
            "in": "query",
            "description": "damage status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageBase": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damage base",
        "description": "query damageBase",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageInsureId",
            "in": "query",
            "description": "damageInsure id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageCheckCount": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageCheckCount count",
        "description": "query damageCheckCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageType",
            "in": "query",
            "description": "damage type stat ,val=1",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageLinkType",
            "in": "query",
            "description": "damage link type stat ,val=1",
            "required": false,
            "type": "integer"

          },
          {
            "name": "dateIdStart",
            "in": "query",
            "description": "dateId start",
            "required": false,
            "type": "string"

          },
          {
            "name": "dateIdEnd",
            "in": "query",
            "description": "dateId end",
            "required": false,
            "type": "string"

          },
          {
            "name": "damageStatus",
            "in": "query",
            "description": "damage status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageTypeMonthStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageType month stat",
        "description": "query damageType month stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageStatus",
            "in": "query",
            "description": "damage status",
            "required": true,
            "type": "integer"

          },
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageTypeWeekStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageType week stat",
        "description": "query damageType week stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageStatus",
            "in": "query",
            "description": "damage status",
            "required": true,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageNotCheckCount": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageNotCheck count",
        "description": "query damageNotCheckCount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yearMonth",
            "in": "query",
            "description": "yearMonth",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageTotalCost": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageTotal cost",
        "description": "query damageTotalCost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yearMonth",
            "in": "query",
            "description": "yearMonth",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageStatus",
            "in": "query",
            "description": "damage status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damage.csv": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damage.csv list",
        "description": "query damage.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageId",
            "in": "query",
            "description": "damage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "createdOnStart",
            "in": "query",
            "description": "createdOn start",
            "required": false,
            "type": "string"

          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "description": "createdOn end",
            "required": false,
            "type": "string"

          },
          {
            "name": "vin",
            "in": "query",
            "description": "car vin",
            "required": false,
            "type": "string"

          },
          {
            "name": "makeId",
            "in": "query",
            "description": "make id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageType",
            "in": "query",
            "description": "damage type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageLinkType",
            "in": "query",
            "description": "damage link type",
            "required": false,
            "type": "integer"

          },
          {
            "name": "declareUserId",
            "in": "query",
            "description": "declareUser id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "declareUserName",
            "in": "query",
            "description": "declareUser name",
            "required": false,
            "type": "string"

          },
          {
            "name": "underUserId",
            "in": "query",
            "description": "underUser id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "underUserName",
            "in": "query",
            "description": "underUser name",
            "required": false,
            "type": "string"

          },
          {
            "name": "routeEndId",
            "in": "query",
            "description": "routeEnd id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "receiveId",
            "in": "query",
            "description": "receive id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageStatus",
            "in": "query",
            "description": "damage status",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage.csv"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/user/{userId}/qualityAssurance": {
      "post": {
        "tags": [
          "damage"
        ],
        "summary": "user add quality record",
        "description": "user add a quality assurance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "quality",
            "in": "body",
            "description": "quality info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/quality"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid parameter id"
          }
        }
      }
    },
    "/user/{userId}/damage": {
      "post": {
        "tags": [
          "damage"
        ],
        "summary": "user create damage",
        "description": "user create damage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damage",
            "in": "body",
            "description": "damage info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/user/{userId}/damage/{damageId}": {
      "put": {
        "tags": [
          "damage"
        ],
        "summary": "update damage info",
        "description": "update damage info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "path",
            "description": "damage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damage",
            "in": "body",
            "description": "damage info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damage"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/user/{userId}/damage/{damageId}/damageStatus/{damageStatus}": {
      "put": {
        "tags": [
          "damage"
        ],
        "summary": "update damage status",
        "description": "update damage status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "path",
            "description": "damage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageStatus",
            "in": "path",
            "description": "damage status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageCheck": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageCheck list",
        "description": "query damageCheck",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageCheckId",
            "in": "query",
            "description": "damageCheck id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "query",
            "description": "damage id",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damageCheck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageCheck id"
          }
        }
      }
    },
    "/damageCheckMonthStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damage check month stat",
        "description": "query damage check month stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yearMonth",
            "in": "query",
            "description": "dateId yeah month eg.201709",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "record start position for paging",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "record size  for paging",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageCheckWeekStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageCheckWeekStat",
        "description": "query damageCheckWeekStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damageCheck"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageCheckUnderMonthStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageCheckUnderMonth stat",
        "description": "query damageCheckUnderMonth stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "record start position for paging",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "record size  for paging",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/damageCheckUnderWeekStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageCheckUnderWeek stat",
        "description": "query damageCheckUnderWeek stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yWeek",
            "in": "query",
            "description": "yWeek",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "record start position for paging",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "record size  for paging",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damage"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damage id"
          }
        }
      }
    },
    "/user/{userId}/damageCheck": {
      "post": {
        "tags": [
          "damage"
        ],
        "summary": "user create damageCheck",
        "description": "user create damageCheck",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "query",
            "description": "damage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageCheck",
            "in": "body",
            "description": "damageCheck info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damageCheck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageCheck id"
          }
        }
      }
    },
    "/user/{userId}/damageCheck/{damageCheckId}": {
      "put": {
        "tags": [
          "damage"
        ],
        "summary": "update damageCheck info",
        "description": "update damageCheck info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageCheckId",
            "in": "path",
            "description": "damageCheck id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "query",
            "description": "damage id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "checkButton",
            "in": "query",
            "description": "check button",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageCheck",
            "in": "body",
            "description": "damageCheck info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damageCheck"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageCheck id"
          }
        }
      }
    },
    "/damageInsure": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageInsure list",
        "description": "query damageInsure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageInsureId",
            "in": "query",
            "description": "damageInsure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "query",
            "description": "damage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureStatus",
            "in": "query",
            "description": "insure status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureActualStart",
            "in": "query",
            "description": "insureActual start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureActualEnd",
            "in": "query",
            "description": "insureActual end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureUserId",
            "in": "query",
            "description": "insureUser id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureUserName",
            "in": "query",
            "description": "insureUser name",
            "required": false,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damageInsure"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsure id"
          }
        }
      }
    },
    "/damageInsureMonthStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageInsureMonth stat",
        "description": "query damageInsureMonth stat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "yearMonth",
            "in": "query",
            "description": "yearMonth",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureStatus",
            "in": "query",
            "description": "insure status",
            "required": true,
            "type": "string"

          },
          {
            "name": "monthStart",
            "in": "query",
            "description": "month start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "monthEnd",
            "in": "query",
            "description": "month end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": "record start position for paging",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "record size  for paging",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damageInsure"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsure id"
          }
        }
      }
    },
    "/damageInsureWeekStat": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageInsureWeekStat",
        "description": "query damageInsureWeekStat",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "insureStatus",
            "in": "query",
            "description": "insure status",
            "required": true,
            "type": "string"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damageInsure"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsure id"
          }
        }
      }
    },
    "/user/{userId}/insure": {
      "post": {
        "tags": [
          "damage"
        ],
        "summary": "user create insure",
        "description": "user create insure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "insure",
            "in": "body",
            "description": "insure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid insure id"
          }
        }
      }
    },
    "/user/{userId}/damageInsure": {
      "post": {
        "tags": [
          "damage"
        ],
        "summary": "user create damageInsure",
        "description": "user create damageInsure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageInsure",
            "in": "body",
            "description": "damageInsure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damageInsure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsure id"
          }
        }
      }
    },
    "/user/{userId}/damageInsure/{damageInsureId}": {
      "put": {
        "tags": [
          "damage"
        ],
        "summary": "update damageInsure info",
        "description": "update damageInsure info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageInsureId",
            "in": "path",
            "description": "damageInsure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageInsure",
            "in": "body",
            "description": "damageInsure info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damageInsure"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsure id"
          }
        }
      }
    },
    "/user/{userId}/damageInsure/{damageInsureId}/insureStatus/{insureStatus}": {
      "put": {
        "tags": [
          "damage"
        ],
        "summary": "update damageInsure status",
        "description": "update damageInsure status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageInsureId",
            "in": "path",
            "description": "damageInsure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "insureStatus",
            "in": "path",
            "description": "insure status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsure id"
          }
        }
      }
    },
    "/damageInsureRel.csv": {
      "get": {
        "tags": [
          "damage"
        ],
        "summary": "query  damageInsureRel csv list",
        "description": "query damageInsureRel.csv",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "damageInsureId",
            "in": "query",
            "description": "damageInsure id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "query",
            "description": "damage id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureStatus",
            "in": "query",
            "description": "insure status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureActualStart",
            "in": "query",
            "description": "insureActual start",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureActualEnd",
            "in": "query",
            "description": "insureActual end",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureUserId",
            "in": "query",
            "description": "insureUser id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "insureUserName",
            "in": "query",
            "description": "insureUser name",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/damageInsureRel"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsureRel id"
          }
        }
      }
    },
    "/user/{userId}/damageInsureRel": {
      "post": {
        "tags": [
          "damage"
        ],
        "summary": "user create damageInsureRel",
        "description": "user create damageInsureRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageInsureRel",
            "in": "body",
            "description": "damageInsureRel info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/damageInsureRel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid damageInsureRel id"
          }
        }
      }
    },
    "/user/{userId}/damageInsure/{damageInsureId}/damage/{damageId}": {
      "delete": {
        "tags": [
          "damage"
        ],
        "summary": "Deletes a damageInsureRel",
        "description": "",
        "operationId": "deleteDamageInsureRel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "damageInsureId",
            "in": "path",
            "description": "damageInsure id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "damageId",
            "in": "path",
            "description": "damage id",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "contacts not found"
          }
        }
      }
    },
    "/repairStation": {
      "get": {
        "tags": [
          "repairStation"
        ],
        "summary": "query repairStation list",
        "description": "query repairStation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repairStationId",
            "in": "query",
            "description": "repairStation id",
            "required": false,
            "type": "integer"

          },
          {
            "name": "repairStationName",
            "in": "query",
            "description": "repairStation name",
            "required": false,
            "type": "string"

          },
          {
            "name": "repairSationStatus",
            "in": "query",
            "description": "repairSation status",
            "required": false,
            "type": "integer"

          },
          {
            "name": "start",
            "in": "query",
            "description": " list start pos",
            "required": false,
            "type": "integer"

          },
          {
            "name": "size",
            "in": "query",
            "description": "list size for pagination",
            "required": false,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/repairStation"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repairStation id"
          }
        }
      }
    },
    "/user/{userId}/repairStation": {
      "post": {
        "tags": [
          "repairStation"
        ],
        "summary": "user create repairStation",
        "description": "user create repairStation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repairStation",
            "in": "body",
            "description": "repairStation info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/repairStation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repairStation id"
          }
        }
      }
    },
    "/user/{userId}/repairStation/{repairStationId}": {
      "put": {
        "tags": [
          "repairStation"
        ],
        "summary": "update repairStation info",
        "description": "update repairStation info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repairStationId",
            "in": "path",
            "description": "repairStation id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repairStation",
            "in": "body",
            "description": "repairStation info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/repairStation"
            }

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repairStation id"
          }
        }
      }
    },
    "/user/{userId}/repairStation/{repairStationId}/repairStationStatus/{repairStationStatus}": {
      "put": {
        "tags": [
          "repairStation"
        ],
        "summary": "update repairStation status",
        "description": "update repairStation status",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repairStationId",
            "in": "path",
            "description": "repairStation id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "repairStationStatus",
            "in": "path",
            "description": "repairStation status",
            "required": true,
            "type": "integer"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/ApiResponse"
              }
            }
          },
          "400": {
            "description": "Invalid token value or invalid repairStation id"
          }
        }
      }
    },
    "/user/{userId}/pushMsg": {
      "get": {
        "tags": [
          "msgPush"
        ],
        "summary": "get pushMsg list",
        "description": "get pushMsg",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user id",
            "required": true,
            "type": "integer"

          },
          {
            "name": "deviceToken",
            "in": "query",
            "description": "device token",
            "required": false,
            "type": "string"

          },
          {
            "name": "messageType",
            "in": "query",
            "description": "message type",
            "required": false,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid token value or invalid user id"
          }
        }
      }
    },
    "/app": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "query  app version ",
        "description": "query app",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app",
            "in": "query",
            "description": "app name :1-storage app",
            "required": false,
            "type": "integer"
          },
          {
            "name": "type",
            "in": "query",
            "description": "app type : 1-android,2-ios",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/app"
              }
            }
          },
          "400": {
            "description": "Invalid token value "
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://oauth.myxxjs.com/api",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "app": {
      "type": "object",
      "properties": {

        "app": {
          "type": "integer"
        },
        "type": {
          "type": "integer"
        },
        "force_update": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "department"
      }
    },
    "user": {
      "type": "object",
      "properties": {

        "mobile": {
          "type": "string"
        },
        "realName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        },
        "gender": {
          "type": "string"
        }
      },
      "xml": {
        "name": "user"
      }
    },
    "avatarImage": {
      "type": "object",
      "properties": {

        "avatarImage": {
          "type": "string"
        }
      },
      "xml": {
        "name": "avatarImage"
      }
    },
    "userDevice": {
      "type": "object",
      "properties": {

        "deviceToken": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "appType": {
          "type": "integer"
        },
        "deviceType": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "userDevice"
      }
    },
    "password": {
      "type": "object",
      "required": [
        "originPassword",
        "newPassword"
      ],
      "properties": {
        "originPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "xml": {
        "name": "password"
      }
    },
    "backPassword": {
      "type": "object",
      "properties": {

        "captcha": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "backPassword"
      }
    },
    "truck": {
      "type": "object",
      "properties": {

        "truckNum": {
          "type": "string"
        },
        "brandId": {
          "type": "integer"
        },
        "hp" : {
          "type": "integer"
        },
        "truckTel": {
          "type": "string"
        },
        "theCode": {
          "type": "string"
        },
        "companyId": {
          "type": "integer"
        },
        "truckType": {
          "type": "integer"
        },
        "number": {
          "type": "integer"
        },
        "drivingDate": {
          "type": "string"
        },
        "licenseDate": {
          "type": "string"
        },
        "twoDate": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "truck"
      }
    },
    "truckImage": {
      "type": "object",
      "properties": {

        "truckImage": {
          "type": "string"
        },
        "imageType": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "truckImage"
      }
    },
    "truckInsureRel": {
      "type": "object",
      "properties": {

        "truckId": {
          "type": "integer"
        },
        "insureId": {
          "type": "integer"
        },
        "insureType": {
          "type": "integer"
        },
        "insureNum": {
          "type": "string"
        },
        "insureMoney": {
          "type": "integer"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "truckInsureRel"
      }
    },
    "truckInsure": {
      "type": "object",
      "properties": {

        "insureName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "truckInsure"
      }
    },
    "truckRepairRel": {
      "type": "object",
      "properties": {

        "repairType": {
          "type": "integer"
        },
        "accidentId": {
          "type": "integer"
        },
        "repairReason": {
          "type": "string"
        },
        "repairStationId": {
          "type": "integer"
        },
        "repairUser": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "repairMoney": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "truckRepairRel"
      }
    },
    "truckAccident": {
      "type": "object",
      "properties": {

        "truckId": {
          "type": "integer"
        },
        "driveId": {
          "type": "integer"
        },
        "dpRouteTaskId": {
          "type": "integer"
        },
        "accidentDate": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "lng": {
          "type": "integer"
        },
        "lat": {
          "type": "integer"
        },
        "accidentExplain": {
          "type": "string"
        }
      },
      "xml": {
        "name": "truckAccident"
      }
    },
    "truckAccidentInsure": {
      "type": "object",
      "properties": {

        "insureId": {
          "type": "integer"
        },
        "insureType": {
          "type": "integer"
        },
        "insurePlan": {
          "type": "integer"
        },
        "financialLoanStatus": {
          "type": "integer"
        },
        "financialLoan": {
          "type": "integer"
        },
        "insureActual": {
          "type": "integer"
        },
        "paymentExplain": {
          "type": "string"
        },
        "checkExplain": {
          "type": "string"
        },
        "accidentIds": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "truckAccidentInsure"
      }
    },
    "truckAccidentInsureRel": {
      "type": "object",
      "properties": {

        "accidentInsureId": {
          "type": "integer"
        },
        "accidentId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "truckAccidentInsureRel"
      }
    },
    "brand": {
      "type": "object",
      "properties": {

        "brandName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "brand"
      }
    },
    "drive": {
      "type": "object",
      "properties": {

        "driveName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "idNumber": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "companyId": {
          "type": "integer"
        },
        "licenseType": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "sibTel": {
          "type": "string"
        },
        "licenseDate": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "drive"
      }
    },
    "driveImage": {
      "type": "object",
      "properties": {

        "driveImage": {
          "type": "string"
        },
        "imageType": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "driveImage"
      }
    },
    "driveRefuel": {
      "type": "object",
      "properties": {

        "driveId": {
          "type": "integer"
        },
        "truckId": {
          "type": "integer"
        },
        "refuelDate": {
          "type": "string"
        },
        "refuelVolume": {
          "type": "integer"
        },
        "dpRouteTaskId": {
          "type": "integer"
        },
        "refuelAddressType": {
          "type": "integer"
        },
        "refuelAddress": {
          "type": "string"
        },
        "lng": {
          "type": "integer"
        },
        "lat": {
          "type": "integer"
        },
        "refuelMoney": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "driveRefuel"
      }
    },
    "checkReason": {
      "type": "object",
      "properties": {

        "checkReason": {
          "type": "string"
        }
      },
      "xml": {
        "name": "checkReason"
      }
    },
    "company": {
      "type": "object",
      "properties": {

        "companyName": {
          "type": "string"
        },
        "operateType": {
          "type": "integer"
        },
        "cooperationTime": {
          "type": "string"
        },
        "contacts": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "company"
      }
    },
    "city": {
      "type": "object",
      "properties": {

        "cityName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "city"
      }
    },
    "cityRoute": {
      "type": "object",
      "properties": {

        "routeStartId": {
          "type": "integer"
        },
        "routeStart": {
          "type": "string"
        },
        "routeEndId": {
          "type": "integer"
        },
        "routeEnd": {
          "type": "string"
        },
        "distance": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "cityRoute"
      }
    },
    "baseAddr": {
      "type": "object",
      "properties": {

        "addrName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "lng": {
          "type": "integer"
        },
        "lat": {
          "type": "integer"
        },
        "cityId": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "baseAddr"
      }
    },
    "receive": {
      "type": "object",
      "properties": {

        "shortName": {
          "type": "string"
        },
        "receiveName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "cleanFee": {
          "type": "number"
        },
        "lng": {
          "type": "integer"
        },
        "lat": {
          "type": "integer"
        },
        "cityId": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "receive"
      }
    },
    "entrust": {
      "type": "object",
      "properties": {

        "shortName": {
          "type": "string"
        },
        "entrustName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "entrust"
      }
    },
    "contacts": {
      "type": "object",
      "properties": {

        "contactsName": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "tel": {
          "type": "string"
        }
      },
      "xml": {
        "name": "contacts"
      }
    },
    "storage": {
      "type": "object",
      "properties": {

        "storageName": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "storage"
      }
    },
    "storageArea": {
      "type": "object",
      "properties": {

        "areaName": {
          "type": "string"
        },
        "row": {
          "type": "integer"
        },
        "col": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "storageArea"
      }
    },
    "car": {
      "type": "object",
      "properties": {

        "vin": {
          "type": "string"
        },
        "makeId": {
          "type": "integer"
        },
        "makeName": {
          "type": "string"
        },
        "modelId": {
          "type": "integer"
        },
        "modelName": {
          "type": "string"
        },
        "routeStartId": {
          "type": "integer"
        },
        "routeStart": {
          "type": "string"
        },
        "baseAddrId": {
          "type": "integer"
        },
        "routeEndId": {
          "type": "integer"
        },
        "routeEnd": {
          "type": "string"
        },
        "receiveId": {
          "type": "integer"
        },
        "entrustId": {
          "type": "integer"
        },
        "orderDate": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        },
        "engineNum": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "car"
      }
    },
    "vin": {
      "type": "object",
      "properties": {

        "vin": {
          "type": "string"
        }
      },
      "xml": {
        "name": "vin"
      }
    },
    "carStorageRel": {
      "type": "object",
      "properties": {

        "vin": {
          "type": "string"
        },
        "makeId": {
          "type": "integer"
        },
        "makeName": {
          "type": "string"
        },
        "modelId": {
          "type": "integer"
        },
        "modelName": {
          "type": "string"
        },
        "routeStartId": {
          "type": "integer"
        },
        "routeStart": {
          "type": "string"
        },
        "baseAddrId": {
          "type": "integer"
        },
        "routeEndId": {
          "type": "integer"
        },
        "routeEnd": {
          "type": "string"
        },
        "receiveId": {
          "type": "integer"
        },
        "entrustId": {
          "type": "integer"
        },
        "orderDate": {
          "type": "string"
        },
        "colour": {
          "type": "string"
        },
        "engineNum": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "parkingId": {
          "type": "integer"
        },
        "storageId": {
          "type": "integer"
        },
        "storageName": {
          "type": "string"
        },
        "planOutTime": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carStorageRel"
      }
    },
    "againCarStorageRel": {
      "type": "object",
      "properties": {

        "parkingId": {
          "type": "integer"
        },
        "storageId": {
          "type": "integer"
        },
        "storageName": {
          "type": "string"
        },
        "planOutTime": {
          "type": "string"
        }
      },
      "xml": {
        "name": "againCarStorageRel"
      }
    },
    "planOutTime": {
      "type": "object",
      "properties": {

        "planOutTime": {
          "type": "string"
        }
      },
      "xml": {
        "name": "RelPlanOutTime"
      }
    },
    "carMake": {
      "type": "object",
      "properties": {

        "makeName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carMake"
      }
    },
    "carModel": {
      "type": "object",
      "properties": {

        "modelName": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carModel"
      }
    },
    "carExceptionRel": {
      "type": "object",
      "properties": {

        "carId": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "carExceptionRel"
      }
    },
    "dpDemand": {
      "type": "object",
      "properties": {

        "routeStartId": {
          "type": "integer"
        },
        "routeStart": {
          "type": "string"
        },
        "baseAddrId": {
          "type": "integer"
        },
        "routeEndId": {
          "type": "integer"
        },
        "routeEnd": {
          "type": "string"
        },
        "receiveId": {
          "type": "integer"
        },
        "preCount": {
          "type": "integer"
        },
        "dateId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "dpTaskStat"
      }
    },
    "dpTaskStat": {
      "type": "object",
      "properties": {

        "routeStartId": {
          "type": "integer"
        },
        "baseAddrId": {
          "type": "integer"
        },
        "routeEndId": {
          "type": "integer"
        },
        "receiveId": {
          "type": "integer"
        },
        "preCount": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "dpTaskStat"
      }
    },
    "dpRouteTask": {
      "type": "object",
      "properties": {

        "truckId": {
          "type": "integer"
        },
        "driveId": {
          "type": "integer"
        },
        "routeStartId": {
          "type": "integer"
        },
        "routeEndId": {
          "type": "integer"
        },
        "distance": {
          "type": "integer"
        },
        "taskPlanDate": {
          "type": "string"
        }
      },
      "xml": {
        "name": "dpRouteTask"
      }
    },
    "dpRouteLoadTask": {
      "type": "object",
      "properties": {

        "dpDemandId": {
          "type": "integer"
        },
        "routeStartId": {
          "type": "integer"
        },
        "baseAddrId": {
          "type": "integer"
        },
        "routeEndId": {
          "type": "integer"
        },
        "receiveId": {
          "type": "integer"
        },
        "dateId": {
          "type": "integer"
        },
        "planDate": {
          "type": "string"
        },
        "planCount": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "dpRouteLoadTask"
      }
    },
    "dpRouteLoadTaskDetail": {
      "type": "object",
      "properties": {

        "carId": {
          "type": "integer"
        },
        "vin": {
          "type": "string"
        }
      },
      "xml": {
        "name": "dpRouteLoadTaskDetail"
      }
    },
    "loadTaskCleanRel": {
      "type": "object",
      "properties": {

        "actualPrice": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "loadTaskCleanRel"
      }
    },
    "damage": {
      "type": "object",
      "properties": {

        "carId": {
          "type": "integer"
        },
        "vin": {
          "type": "string"
        },
        "truckId": {
          "type": "integer"
        },
        "truckNum": {
          "type": "string"
        },
        "driveId": {
          "type": "integer"
        },
        "driveName": {
          "type": "string"
        },
        "damageExplain": {
          "type": "string"
        }
      },
      "xml": {
        "name": "damage"
      }
    },
    "damageCheck": {
      "type": "object",
      "properties": {

        "underUserId": {
          "type": "integer"
        },
        "underUserName": {
          "type": "string"
        },
        "damageType": {
          "type": "integer"
        },
        "damageLinkType": {
          "type": "integer"
        },
        "refundUserId": {
          "type": "integer"
        },
        "refundUserName": {
          "type": "string"
        },
        "reductionCost": {
          "type": "integer"
        },
        "penaltyCost": {
          "type": "integer"
        },
        "profit": {
          "type": "integer"
        },
        "repairId": {
          "type": "integer"
        },
        "repairCost": {
          "type": "integer"
        },
        "transportCost": {
          "type": "integer"
        },
        "underCost": {
          "type": "integer"
        },
        "companyCost": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "damageCheck"
      }
    },
    "insure": {
      "type": "object",
      "properties": {

        "insureId": {
          "type": "integer"
        },
        "insurePlan": {
          "type": "integer"
        },
        "insureActual": {
          "type": "integer"
        },
        "damageId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "insure"
      }
    },
    "damageInsure": {
      "type": "object",
      "properties": {

        "insureId": {
          "type": "integer"
        },
        "insurePlan": {
          "type": "integer"
        },
        "insureActual": {
          "type": "integer"
        },
        "damageIds": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "damageInsure"
      }
    },
    "damageInsureRel": {
      "type": "object",
      "properties": {

        "damageInsureId": {
          "type": "integer"
        },
        "damageId": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "damageInsureRel"
      }
    },
    "truckDispatch": {
      "type": "object",
      "properties": {

        "currentCity": {
          "type": "integer"
        },
        "taskStart": {
          "type": "integer"
        },
        "taskEnd": {
          "type": "integer"
        },
        "carCount": {
          "type": "integer"
        },
        "dispatchFlag": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "truckDispatch"
      }
    },
    "quality": {
      "type": "object",
      "properties": {

        "carId": {
          "type": "integer"
        },
        "vin": {
          "type": "string"
        }
      },
      "xml": {
        "name": "quality"
      }
    },
    "repairStation": {
      "type": "object",
      "properties": {

        "repairStationName": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "lng": {
          "type": "integer"
        },
        "lat": {
          "type": "integer"
        },
        "remark": {
          "type": "string"
        }
      },
      "xml": {
        "name": "repairStation"
      }
    }
  },
  "externalDocs": {
    "description": "Find more on developer website",
    "url": "http://myxxjs.com"
  }
}